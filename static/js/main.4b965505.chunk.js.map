{"version":3,"sources":["Tutorial/FormMutlipleInput.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","name","email","text","setText","person","setPerson","Change","e","target","value","type","onChange","placeholder","onClick","preventDefault","Person","id","Date","getTime","toString","alert","map","per","remove","filter","Headers","FormMultipleInput","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOASMA,EAAS,WAAO,IAAD,EACOC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,KADnC,mBACVC,EADU,KACJC,EADI,OAEWJ,mBAAS,IAFpB,mBAEVK,EAFU,KAEFC,EAFE,KAIXC,EAAS,SAACC,GACZ,IAAMP,EAAOO,EAAEC,OAAOR,KAChBS,EAAQF,EAAEC,OAAOC,MACvBN,EAAQ,2BAAKD,GAAN,kBAAaF,EAAOS,MAiB/B,OACI,qCACI,iCACI,uBAAOC,KAAK,OAAOD,MAAOP,EAAKF,KAAMA,KAAK,OAAOW,SAAUL,EAAQM,YAAY,SAC/E,uBAAOF,KAAK,OAAOD,MAAOP,EAAKD,MAAOD,KAAK,QAAQW,SAAUL,EAAQM,YAAY,aAErF,wBAAQF,KAAK,SAASG,QArBjB,SAACN,GAEV,GADAA,EAAEO,iBACEZ,EAAKF,MAAQE,EAAKD,MAAO,CACzB,IAAMc,EAAM,2BAAQb,GAAR,IAAcc,IAAI,IAAIC,MAAOC,UAAUC,aACnDd,EAAU,GAAD,mBAAKD,GAAL,CAAaW,KACtBZ,EAAQ,CAAEH,KAAM,GAAIC,MAAO,UAG3BmB,MAAM,kBAaN,qBACChB,EAAOiB,KAAI,SAACC,GAAS,IACVN,EAAoBM,EAApBN,GAAIhB,EAAgBsB,EAAhBtB,KAAMC,EAAUqB,EAAVrB,MAClB,OACI,gCACI,+BAAKD,EAAL,OACA,6BAAKC,IACL,wBAAQY,QAAS,kBAjBrB,SAACG,GACb,IAAMO,EAASnB,EAAOoB,QAAO,SAACpB,GAAD,OAAYA,EAAOY,KAAOA,KACvDX,EAAUkB,GAe6BE,CAAQT,IAA/B,+BAOTU,EAnDW,WACtB,OACI,mCACI,cAAC,EAAD,OCMGC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b965505.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst FormMultipleInput = () => {\n    return (\n        <>\n            <Header />\n        </>\n    )\n}\nconst Header = () => {\n    const [text, setText] = useState({ name: \"\", email: \"\" })\n    const [person, setPerson] = useState([]);\n\n    const Change = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setText({ ...text, [name]: value })\n    }\n    const Head = (e) => {\n        e.preventDefault();\n        if (text.name && text.email) {\n            const Person = { ...text, id: new Date().getTime().toString() }\n            setPerson([...person, Person])\n            setText({ name: \"\", email: \"\" })\n        }\n        else {\n            alert(\"No Item Added\")\n        }\n    }\n    const Headers = (id) => {\n        const remove = person.filter((person) => person.id !== id)\n        setPerson(remove)\n    }\n    return (\n        <>\n            <form >\n                <input type=\"text\" value={text.name} name=\"name\" onChange={Change} placeholder=\"Name\" />\n                <input type=\"text\" value={text.email} name=\"email\" onChange={Change} placeholder=\"Email\" />\n            </form>\n            <button type=\"submit\" onClick={Head}>Submit </button>\n            {person.map((per) => {\n                const { id, name, email } = per;\n                return (\n                    <div>\n                        <h4>{name} </h4>\n                        <h6>{email}</h6>\n                        <button onClick={() => Headers(id)}>Remove </button>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\nexport default FormMultipleInput;","import { useState, useEffect, useReducer } from \"react\";\nimport './App.css';\nimport FormMultipleInput from \"./Tutorial/FormMutlipleInput\";\nfunction App() {\n  return (\n    <>\n      <FormMultipleInput />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}