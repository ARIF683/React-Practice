{"version":3,"sources":["Tutorial/UseContext2.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Data","id","name","Another","a","useContext","show","map","person","onClick","Headers","setShow","UseContext2","useState","Provider","value","remove","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAEMA,EAAUC,IAAMC,gBAChBC,EAAO,CACT,CACIC,GAAK,EACLC,KAAO,QAEX,CACID,GAAK,EACLC,KAAO,YAEX,CACID,GAAK,EACLC,KAAO,QAiBTC,EAAU,WACZ,IAAMC,EAAIC,qBAAWR,GACrB,OACI,qCACCO,EAAEE,KAAKC,KAAI,SAACC,GAAY,IACdP,EAAYO,EAAZP,GAAIC,EAAQM,EAARN,KACX,OACI,qCACA,+BAAKA,EAAL,OACA,wBAAQO,QAAW,kBAAML,EAAEM,QAAQT,IAAnC,2BAIR,wBAAQQ,QAAW,kBAAML,EAAEO,QAAQ,KAAnC,4BAIOC,EA/BK,WAAO,IAAD,EACCC,mBAASb,GADV,mBAChBM,EADgB,KACVK,EADU,KAMvB,OACI,mCACA,cAACd,EAAQiB,SAAT,CAAkBC,MAAS,CAACT,OAAOI,QANvB,SAACT,GACb,IAAIe,EAASV,EAAKW,QAAO,SAACT,GAAD,OAAYA,EAAOP,KAAOA,KACnDU,EAAQK,IAIoCL,WAA5C,SACI,cAAC,EAAD,SCbIO,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.77339ae7.chunk.js","sourcesContent":["import React, {useState, useContext} from \"react\";\n\nconst Context = React.createContext();\nconst Data = [\n    {\n        id : 1,\n        name : \"Arif\",\n    },\n    {\n        id : 2,\n        name : \"Shahazim\",\n    },\n    {\n        id : 3,\n        name : \"Dod\",\n    }\n]\nconst UseContext2 = () => {\n   const [show, setShow] = useState(Data);\n   const Headers = (id) => {\n       let remove = show.filter((person) => person.id !== id)\n       setShow(remove)\n   }\n   return (\n       <>\n       <Context.Provider value = {{show , Headers, setShow  }}>\n           <Another /> \n       </Context.Provider>\n       </> \n   )\n}\nconst Another = () => {\n    const a = useContext(Context)\n    return (\n        <>\n        {a.show.map((person) => {\n            const {id, name} = person;\n            return (\n                <>\n                <h4>{name} </h4>\n                <button onClick = {() => a.Headers(id)}>Remove </button> \n                </> \n            )\n        })}\n        <button onClick = {() => a.setShow([])}>Clear All </button>\n        </> \n    )\n}\nexport default UseContext2;","import { useState, useEffect, useReducer } from \"react\";\nimport './App.css';\nimport UseContext2  from \"./Tutorial/UseContext2\";\n\n\nfunction App() {\n  return (\n    <>\n      <UseContext2 />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}